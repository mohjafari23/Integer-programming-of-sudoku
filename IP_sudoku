clear;clc;close all

grid = [5 3 0 0 7 0 0 0 0;
        6 0 0 1 9 5 0 0 0;
        0 9 8 0 0 0 0 6 0;
        8 0 0 0 6 0 0 0 3;
        4 0 0 8 0 3 0 0 1;
        7 0 0 0 2 0 0 0 6;
        0 6 0 0 0 0 2 8 0;
        0 0 0 4 1 9 0 0 5;
        0 0 0 0 8 0 0 7 9 ];

% Define the size of the Sudoku grid
N = size(grid, 1);

% Create the binary decision variables
x = optimvar('x',[N, N, N],'Type','integer','LowerBound',0,'UpperBound',1);

% Create the objective function weights (all equal to 1)
weights = ones([N,N,N]);

% Create the optimization problem
ipsudoku = optimproblem;

% Set up the objective function
ipsudoku.Objective = sum(sum(sum(weights .* x)));


% Create the constraints
prefilled = optimconstr(60,1);
for i = 1:N
    for j = 1:N
        if grid(i, j) ~= 0
            % Fix the value of pre-filled cells
                      prefilled(i,1)= x(i, j, grid(i, j)) == 1;
        end
    end
end

   ipsudoku.Constraints.prefilled=prefilled;
    ipsudoku.Constraints.ci=sum(x,1)==1;
     ipsudoku.Constraints.cj=sum(x,2)==1;
      ipsudoku.Constraints.ck=sum(x,3)==1;

% Each digit should appear exactly once in each 3x3 subgrid
for p = 0:2
    for q = 0:2
        for k = 1:N
            ce=sum(sum(x(1+p:3+p, 1+q:3+q, k))) == 1;
            constraints = [constraints; ce ];
        end
    end
end


